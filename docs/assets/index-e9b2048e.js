var g=Object.defineProperty;var f=(i,t,e)=>t in i?g(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var s=(i,t,e)=>(f(i,typeof t!="symbol"?t+"":t,e),e);import{p as a,P as m}from"./phaser-12b41bc6.js";import{g as c}from"./public-97fb009b.js";import{d as K,r as S,o as _,c as A,a as b,_ as D}from"./index-2c91a40f.js";const h={scene:{width:800,height:600,gravity:100},bg:{key:"bg"},titles:{key:"titles"},player:{animation:{idle:{url:"knight/sprite/_Idle.png",key:"idle",start:0,end:9},attack:{url:"knight/sprite/_Attack.png",key:"attack",start:0,end:3},crouch:{url:"knight/sprite/_Crouch.png",key:"crouch",start:0,end:0},crouchWalk:{url:"knight/sprite/_CrouchWalk.png",key:"crouchWalk",start:0,end:7},crouchAttack:{url:"knight/sprite/_CrouchAttack.png",key:"crouchAttack",start:0,end:3},jump:{url:"knight/sprite/_Jump.png",key:"jump",start:0,end:2},run:{url:"knight/sprite/_Run.png",key:"run",start:0,end:9}}}},{idle:y,attack:l,crouch:u,crouchWalk:d,crouchAttack:p,jump:k,run:n}=h.player.animation;class w extends a.Physics.Arcade.Sprite{constructor(e,r,o){super(e,r,o,y.key);s(this,"isCrouch");s(this,"isJump",!1);s(this,"speed",200);s(this,"scaleBase",2);s(this,"keyJ");s(this,"keyK");s(this,"keyS");s(this,"keyA");s(this,"keyW");s(this,"keyD");s(this,"keyShift");e.add.existing(this),e.physics.add.existing(this),this.setScale(this.scaleBase),this.getBody().setCollideWorldBounds(!0),this.getBody().setGravityY(900),this.regisKeys(),this.regisAnims(),this.idle(),this.handleKeysByUp()}getBody(){return this.body}handleKeysByUp(){this.keyA.on("up",()=>{this.keyS.isDown?this.crouch():this.idle()}),this.keyD.on("up",()=>{this.keyS.isDown?this.crouch():this.idle()}),this.keyS.on("up",()=>{this.keyA.isDown||this.keyD.isDown?this.run():this.idle()}),this.keyShift.on("up",()=>{this.speed=200}),this.keyJ.on("up",()=>{this.keyS.isDown?this.crouchAttack():this.attack().on("animationcomplete",()=>this.idle())}),this.keyK.on("down",()=>{this.isJump||(this.isJump=!0,this.setVelocityY(-400),this.jump())})}handleKeysByDown(){this.setVelocityX(0);const e=this.anims.getName();console.log(e),this.keyShift.isDown&&(this.speed=400),this.keyA.isDown&&(this.setFlipX(!0),this.setVelocityX(-this.speed),this.keyS.isUp&&e!==n.key&&this.run()),this.keyD.isDown&&(this.setFlipX(!1),this.setVelocityX(this.speed),this.keyS.isUp&&e!==n.key&&this.run()),this.keyS.isDown&&(this.keyA.isDown||this.keyD.isDown?e!==d.key&&this.crouchWalk():this.crouch())}update(){this.handleKeysByDown(),this.getBody().velocity.y===0&&(this.isJump=!1)}regisKeys(){this.keyJ=this.scene.input.keyboard.addKey(a.Input.Keyboard.KeyCodes.J),this.keyK=this.scene.input.keyboard.addKey(a.Input.Keyboard.KeyCodes.K),this.keyW=this.scene.input.keyboard.addKey(a.Input.Keyboard.KeyCodes.W),this.keyA=this.scene.input.keyboard.addKey(a.Input.Keyboard.KeyCodes.A),this.keyS=this.scene.input.keyboard.addKey(a.Input.Keyboard.KeyCodes.S),this.keyD=this.scene.input.keyboard.addKey(a.Input.Keyboard.KeyCodes.D),this.keyShift=this.scene.input.keyboard.addKey(a.Input.Keyboard.KeyCodes.SHIFT)}createAnim(e,r=1){this.scene.anims.create({key:e.key,frames:this.scene.anims.generateFrameNames(e.key,{start:e.start,end:e.end}),frameRate:15,repeat:r})}regisAnims(){this.createAnim(y,-1),this.createAnim(l),this.createAnim(u,-1),this.createAnim(d,-1),this.createAnim(p),this.createAnim(k),this.createAnim(n,-1)}run(){this.anims.play(n.key,!0)}attack(){return this.anims.play(l.key,!0)}crouch(){this.anims.play(u.key,!0)}crouchAttack(){this.anims.play(p.key,!0)}crouchWalk(){this.anims.play(d.key,!0)}idle(){this.anims.play(y.key,!0)}jump(){this.anims.play(k.key,!0)}}class C extends m.Scene{constructor(){super("game");s(this,"ground");s(this,"player")}create(){this.add.image(0,0,h.bg.key).setOrigin(0),this.ground=this.physics.add.staticGroup();for(let e=0;e<15;e++)this.ground.create(e*64,536+32,h.titles.key,1);this.player=new w(this,300,400),this.physics.add.collider(this.player,this.ground)}update(e,r){this.player.update()}}const{idle:P,attack:W,crouch:x,crouchWalk:B,crouchAttack:v,jump:I,run:J}=h.player.animation;class $ extends m.Scene{constructor(){super("preload")}preload(){this.loadImg(),this.loadSpritesheet()}loadImg(){this.load.image(h.bg.key,c("knight/bg.png"))}loadPlayerSheet(t){this.load.spritesheet(t.key,c(t.url),{frameWidth:120,frameHeight:80})}loadSpritesheet(){this.load.spritesheet(h.titles.key,c("knight/titles.png"),{frameWidth:64,frameHeight:64}),this.loadPlayerSheet(P),this.loadPlayerSheet(W),this.loadPlayerSheet(x),this.loadPlayerSheet(B),this.loadPlayerSheet(v),this.loadPlayerSheet(I),this.loadPlayerSheet(J)}create(){this.scene.start("game")}}const j=K({__name:"index",setup(i){const t=S();return _(()=>{const{width:e,height:r,gravity:o}=h.scene;new Phaser.Game({type:Phaser.AUTO,parent:t.value,canvasStyle:"margin: 0 auto",width:e,height:r,backgroundColor:"#ff0000",scene:[$,C],physics:{default:"arcade",arcade:{gravity:{y:o},debug:!0}}})}),(e,r)=>(b(),A("div",{class:"viewCon",ref_key:"con",ref:t},null,512))}});const V=D(j,[["__scopeId","data-v-c514275e"]]);export{V as default};
