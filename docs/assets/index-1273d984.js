var S=Object.defineProperty;var _=(o,i,t)=>i in o?S(o,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[i]=t;var s=(o,i,t)=>(_(o,typeof i!="symbol"?i+"":i,t),t);import{p as n}from"./phaser-12b41bc6.js";import{g as l}from"./public-97fb009b.js";import{d as D,r as H,o as w,c as v,a as F,_ as R}from"./index-2c91a40f.js";class L extends n.Scene{constructor(){super("preload")}preload(){this.load.atlasXML({key:"titles",textureURL:l("hitBrick/Breakout_Tile_Free.png"),atlasURL:l("hitBrick/Breakout_Tile_Free.xml")}),this.load.audio("soundShot",l("hitBrick/audio/shot.ogg")),this.load.audio("soundHitBrick",l("hitBrick/audio/hitBrick.ogg")),this.load.audio("soundHitBrick2",l("hitBrick/audio/hitBrick2.ogg")),this.load.audio("soundHitFlap",l("hitBrick/audio/hitFlap.ogg")),this.load.audio("soundBegin",l("hitBrick/audio/begin.ogg")),this.load.audio("soundLose",l("hitBrick/audio/you_lose.ogg")),this.load.audio("soundWin",l("hitBrick/audio/you_win.ogg"))}create(){this.scene.start("game")}}const p={scene:{width:800,height:600},brick:{width:384,height:128}};class T extends n.Physics.Arcade.Sprite{constructor(t,e,a){super(t,e,a,"titles","ball");s(this,"scaleBase",.3);t.add.existing(this),t.physics.add.existing(this),this.setScale(this.scaleBase),this.setCollideWorldBounds(!0),this.setBounce(1)}}const{width:b,height:A}=p.scene;class C extends n.Physics.Arcade.Sprite{constructor(t,e,a){super(t,e,a,"titles","flap/frame0");s(this,"ball");s(this,"scaleBase",.6);s(this,"isShot",!1);s(this,"gameScene");this.gameScene=t,this.anims.create({key:"flapAnim",frames:this.anims.generateFrameNames("titles",{prefix:"flap/frame",start:0,end:2}),frameRate:8,repeat:-1}),this.play("flapAnim",!0),t.add.existing(this),t.physics.add.existing(this),this.setScale(this.scaleBase),this.setImmovable();const d=243*this.scaleBase/2;this.scene.input.on("pointermove",h=>{this.x=n.Math.Clamp(h.x,d,b-d)}),this.scene.input.on("pointerup",()=>{if(this.isShot)return;const h=Math.random()*800-400;this.ball.setVelocity(h,-400),this.isShot=!0,this.gameScene.soundShot.play()}),this.initBall()}update(){this.isShot||(this.ball.x=this.x),this.ball.y>A&&(console.log("outEdge"),this.initState(),this.gameScene.soundLose.play())}initBall(){this.ball=new T(this.scene,this.x,this.y-60),this.scene.physics.add.collider(this,this.ball,()=>this.ballHitFlap())}ballHitFlap(){this.gameScene.soundHitFlap.play(),console.log("hit flap");let t=this.x-this.ball.x;this.ball.x===this.x?this.ball.setVelocityX(Math.random()*800-400):this.ball.setVelocityX(10*t)}initState(){this.isShot=!1,this.x=b/2,this.ball.x=this.x,this.ball.y=this.y-60,this.ball.setVelocity(0,0)}}const{brick:{width:W,height:M}}=p,c=class extends n.Physics.Arcade.Sprite{constructor(t,e,a,d,h){super(t,e,a,"titles",d);s(this,"isDestroy",!1);s(this,"frameDefault");s(this,"frameDestroyed");this.frameDefault=d,this.frameDestroyed=h,t.add.existing(this),t.physics.add.existing(this),this.setScale(c.scaleBase)}handleDestroyed(){this.isDestroy=!0,this.setTexture("titles",this.frameDestroyed)}handleRemove(){this.disableBody(!0,!0)}};let r=c;s(r,"scaleBase",.2),s(r,"widthReal",W*c.scaleBase),s(r,"heightReal",M*c.scaleBase);const{width:k,height:P}=p.scene;class V extends n.Scene{constructor(){super("game");s(this,"flap");s(this,"brickGroup");s(this,"scoreText");s(this,"score",0);s(this,"soundShot");s(this,"soundHitBrick");s(this,"soundHitBrick2");s(this,"soundHitFlap");s(this,"soundBegin");s(this,"soundLose");s(this,"soundWin");s(this,"ballHitBrick",(t,e)=>{e.isDestroy?(e.handleRemove(),this.soundHitBrick2.play(),this.updateScore()):(e.handleDestroyed(),this.soundHitBrick.play())})}preload(){this.soundShot=this.sound.add("soundShot"),this.soundHitBrick=this.sound.add("soundHitBrick"),this.soundHitBrick2=this.sound.add("soundHitBrick2"),this.soundHitFlap=this.sound.add("soundHitFlap"),this.soundBegin=this.sound.add("soundBegin"),this.soundLose=this.sound.add("soundLose"),this.soundWin=this.sound.add("soundWin")}create(){this.flap=new C(this,k/2,P-100),this.physics.world.setBoundsCollision(!0,!0,!0,!1);const t=[{brickDefault:"brick/blue",brickDestroyed:"brick/blue2"},{brickDefault:"brick/green",brickDestroyed:"brick/green2"},{brickDefault:"brick/purple",brickDestroyed:"brick/purple2"},{brickDefault:"brick/red",brickDestroyed:"brick/red2"}],{widthReal:e,heightReal:a}=r,d=4,h=10,m=80,y=(k-h*e)/2;for(let u=0;u<d;u++)for(let f=0;f<h;f++){const{brickDefault:B,brickDestroyed:x}=t[u],g=new r(this,y+e/2+e*f,m+a/2+a*u,B,x);g.setImmovable(),this.physics.add.collider(this.flap.ball,g,this.ballHitBrick)}this.scoreText=this.add.text(0,0,"Score: 0",{fontSize:"28px",color:"#fff"}),this.soundBegin.play()}updateScore(){this.score++,this.scoreText.setText(`Score: ${this.score}`)}update(){this.flap.update()}}const $=D({__name:"index",setup(o){const i=H();function t(){const{width:e,height:a}=p.scene;new n.Game({width:e,height:a,type:Phaser.AUTO,parent:i.value,canvasStyle:"margin: 0 auto",scene:[L,V],physics:{default:"arcade",arcade:{debug:!1}}})}return w(()=>{t()}),(e,a)=>(F(),v("div",{class:"viewCon",ref_key:"con",ref:i},null,512))}});const I=R($,[["__scopeId","data-v-3f39d167"]]);export{I as default};
